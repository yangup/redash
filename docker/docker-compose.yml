version: "3.7"
x-redash-service: &redash-service
  image: registry.ksmdev.top/kit/docker-images/redash:v10.1.0-1
  depends_on:
    postgres:
      condition: service_healthy
  env_file: .env
  deploy:
    resources:
      limits:
        cpus: '2'
        memory: 4G
  networks:
    - wh-net
services:
  server:
    <<: *redash-service
    command: server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redash-s.rule=Host(`redash.wh.ksmdev.top`)"
      - "traefik.http.routers.redash-s.entrypoints=websecure"
      - "traefik.http.routers.redash-s.tls.certresolver=myresolver"
    environment:
      REDASH_WEB_WORKERS: 2
  scheduler:
    <<: *redash-service
    command: scheduler
  scheduled_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
  adhoc_worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "queries"
      WORKERS_COUNT: 2
  worker:
    <<: *redash-service
    command: worker
    environment:
      QUEUES: "periodic emails default"
      WORKERS_COUNT: 1
  redis1:
    image: redis:7-alpine
    restart: unless-stopped
    networks:
      - wh-net
  postgres:
    image: postgres:13-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    networks:
      - wh-net
volumes:
  postgres_data:
    driver: local
networks:
  wh-net:
    external: true